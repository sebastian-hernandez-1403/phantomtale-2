// Código generado automáticamente. No editar.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile17 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile19 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile20 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile21 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile22 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile23 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile24 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile25 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile26 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile29 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile27 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile28 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile30 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile32 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile31 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile33 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "nivel1":
            case "nivel1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0":
            case "level0":return tiles.createTilemap(hex`1e000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000200000000000000000300000000000003000000000000000000000000000d00000007000000000000000000000000000000000000000000000000040404000004080906000000000000000000000000000a00000b00000004040404040406040404080a0a0a0904000000000c0404040404040404040404040404040404040405050505050404040404040404040404040404040404040404`, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . 2 . . . . . . 2 . . . . . . . . . . . . . . . . 
. 2 . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 . 
. 2 . . 2 . . . . . . . . . . . . . . . . 2 . . . 2 2 2 2 2 
2 2 2 2 2 . . . . . 2 . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile3,myTiles.tile4,myTiles.tile5,sprites.castle.tileDarkGrass3,sprites.castle.tileDarkGrass2,sprites.castle.tileDarkGrass1,sprites.builtin.forestTiles0,sprites.swamp.swampTile0,sprites.swamp.swampTile2,sprites.swamp.swampTile1,sprites.castle.rock0,myTiles.tile2,myTiles.tile11], TileScale.Sixteen);
            case "nivel2":
            case "nivel2":return tiles.createTilemap(hex`3ab000000000000000000000000070404040404040404040404040404040404040404040404040404030303030305010101010909090909090908080808080a0a0a0a0a0a0a0a0a0a`, img`
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
..........................................................
222.......................................................
2222......................................................
222222222222222...........................................
22222222222222222222222222................................
22222222222222222222222222222222....2222222222222222222222
`, [myTiles.transparency16,myTiles.tile14,myTiles.tile15,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundCenter,sprites.dungeon.darkGroundNorthEast0,myTiles.tile20,sprites.dungeon.stairLarge,myTiles.tile21,sprites.builtin.oceanDepths3,sprites.builtin.oceanDepths1,myTiles.tile23,myTiles.tile25], TileScale.Sixteen);
            case "nivel3":
            case "nivel3":return tiles.createTilemap(hex``, img`
.................................................
.................................................
.................................................
.................................................
.................................................
.................................................
.................................................
.................................................
.................................................
..............2222222............................
..........................................2222222
2222.........................222222222222222.....
222222222................2222222222222222222.....
22222222222222.......22222222222222..............
22222222222222222222222222222....................
.................................................
`, [myTiles.transparency16,myTiles.tile14,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundCenter,sprites.dungeon.darkGroundNorthEast0,myTiles.tile24,myTiles.tile5,myTiles.tile12,myTiles.tile3,sprites.dungeon.stairLarge], TileScale.Sixteen);
            case "nivel5":
            case "nivel5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "platformer1":
            case "level":return tiles.createTilemap(hex`24000f0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000300000012121212121212121212121212121212121212121212121212121212121212121212121204080808080808080808080808080808080808080808080808080808080808080808080905070707070707070707070707070707070707070707070707070707070707070707070a05070307070707070707070703070707070707070707070707000707070707070707070a0507070707070707070707070707070f070707070707070707000707000707070707070a05020f0f070707070707070707070707070707070707070f07000707110707000707070a050e0f0f070000070707070700000707070707070707070707000707000707000707070a050b070f0f0707070707070707070707070707130f07070707070b0b12120b071010100a060c00070f0f070707070707070707070700070707070707070b0c0c0c0c0c071010100d0b0c0c0b0b0f0f0f0f070007070707070b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0b0b0b0b0b0c0c0c0c0c0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c`, img`
....................................
....................................
....................................
22222222222222222222222222222.......
....................................
....................................
....................................
....................................
............................22......
............................22......
.2........................22222.....
.2.......................222222.....
22222...........22222222222222222222
222222222222222222222222222222222222
222222222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile3,myTiles.tile4,myTiles.tile5,sprites.builtin.forestTiles5,sprites.builtin.forestTiles9,sprites.builtin.forestTiles13,sprites.builtin.forestTiles10,sprites.builtin.forestTiles6,sprites.builtin.forestTiles7,sprites.builtin.forestTiles11,myTiles.tile7,myTiles.tile8,sprites.builtin.forestTiles15,myTiles.tile11,myTiles.tile12,myTiles.tile13,myTiles.tile15,myTiles.tile20,myTiles.tile10,myTiles.tile6], TileScale.Sixteen);
            case "nivel6":
            case "nivel6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "nivel4":
            case "nivel4":return tiles.createTilemap(hex`3200100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b000000000000000000000800000000070000000000000000000000000000000000000000000000000000000000010000000000000000000000080000000000000000000000020202020202020202000000000000000000000000000202020202020202020202020008000000000000000002020202020003030303030303030300000000000000000000000000060606060606060606060606060606060606060606060606060606060606060606060606060606020202020202020202020a`, img`
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
...................2..............................
................2...........222222222.............
222222222222.2........22222.......................
.......................................2222222222.
`, [myTiles.transparency16,myTiles.tile6,myTiles.tile20,myTiles.tile26,myTiles.tile3,myTiles.tile5,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile23,sprites.dungeon.stairLarge,myTiles.tile10], TileScale.Sixteen);
            case "nivel7":
            case "nivel7":return tiles.createTilemap(hex`1000100007030303030303030303030303030308020101010101010101010101010c0c050201010b10121011010101010101010502010101010f010f010101010101010502010101010f010f01010117100d010502010101010f010f0101010f0101010502010101010f011410101015010e010502010101010f010f0101010f010f010502010101010f010f010101161013010502010101010f010f010101010101010502010101010f010f010101010101010502010101011610150101010101010105020101010101010f0101010101010105020101010101010f0101010101010105020101010101010f01010101010101050904040404040606060604040404040a`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 . . . . . 2 2 2 2 2 2 2 2 
2 2 2 . . . . . 2 2 2 2 2 2 2 2 
2 2 2 2 . . . . 2 2 2 . . 2 2 2 
2 2 2 2 2 . 2 . 2 2 2 . 2 2 2 2 
2 2 2 2 2 . 2 . . . . . 2 2 2 2 
2 2 2 2 2 . 2 . 2 2 2 . 2 . 2 2 
2 2 2 2 2 . 2 . 2 2 2 . . . 2 2 
2 2 2 2 2 . 2 . 2 2 2 2 2 2 2 2 
2 2 2 2 2 . . . . . 2 2 2 2 2 2 
2 2 2 2 2 . . . . . 2 2 2 2 2 2 
2 2 2 2 2 . . . . . 2 2 2 2 2 2 
2 2 2 2 2 2 . . . . 2 2 2 2 2 2 
2 2 2 2 2 2 . . . . 2 2 2 2 2 2 
2 2 2 2 2 2 . . . . 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.doorLockedWest,sprites.dungeon.doorLockedNorth,sprites.dungeon.doorLockedSouth,sprites.dungeon.doorLockedEast,sprites.dungeon.doorOpenSouth,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterSouthWest,myTiles.tile27,sprites.dungeon.chestClosed,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.collectibleBlueCrystal,sprites.vehicle.roadVertical,sprites.vehicle.roadHorizontal,sprites.vehicle.roadTurn2,sprites.vehicle.roadIntersection3,sprites.vehicle.roadTurn4,sprites.vehicle.roadIntersection2,sprites.vehicle.roadIntersection4,sprites.vehicle.roadTurn3,sprites.vehicle.roadTurn1], TileScale.Sixteen);
            case "nivel8":
            case "nivel8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "nivel9":
            case "nivel9":return tiles.createTilemap(hex`d0400090d0000000000000000000009000000000000000000000000000000000000000000000000000000090000000000090400040d0d04000d000d00000000000000000000000000000000000e00000000000000000000000000000000000000000000000000040004000d0d040d000d09000000000000000000000000000000040400000000000000000000000000000000000000000a0000000004000400000d0d04040d00000000000009000000000d04040404000000000000000000000000000000000000000000000000000000000000000000000000040404040404040404040404040000000000000000000000000d0d0d0d0d0d0d0d0d0d0000000a0d0a00000000000000000000000000000000000d0d0d0d0d00000000000000000000050000000d0d0d0d0d00000000000d0d07020202020206000000000000000100000000000000000d0d0d0000000000000000000000000001000d0a0c0a0d00000d0d0a0d0003030303030303000000000000000d00000000000000000000000000000000000000000000000000000d0d0d0d0d000d0d0404040000000000000000000000000000070202060d00000000000000000000000000000000000007020202020202020202060d000000000000000000000000000000000000030303030d00000000000000000000000000000000000003030303030303030303030d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d080b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b`, img`
.....................................................
.....................................................
.....................................................
.....................................................
.........................2.22........................
.........................2.2.2.......................
.........................2.2..2......................
.........................2.2...2...................22
.........................2.2....22.............2222..
..................................2222222222222......
.....................................................
.................2222222.............................
.....................................................
.............222..............2222...................
22222222222..........................................
.....................................................
`, [myTiles.transparency16,myTiles.tile15,myTiles.tile20,myTiles.tile26,myTiles.tile32,myTiles.tile3,myTiles.tile31,myTiles.tile33,myTiles.tile1,myTiles.tile5,myTiles.tile12,myTiles.tile14,myTiles.tile10,myTiles.tile25,sprites.dungeon.stairLarge], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile1":return tile1;
            case "myTile":
            case "tile6":return tile6;
            case "myTile2":
            case "tile9":return tile9;
            case "myTile0":
            case "tile7":return tile7;
            case "myTile1":
            case "tile8":return tile8;
            case "tile3":return tile3;
            case "tile2":return tile2;
            case "tile4":return tile4;
            case "tile11":return tile11;
            case "tile5":return tile5;
            case "myTile4":
            case "tile12":return tile12;
            case "myTile5":
            case "tile13":return tile13;
            case "myTile6":
            case "tile14":return tile14;
            case "myTile7":
            case "tile15":return tile15;
            case "myTile8":
            case "tile18":return tile18;
            case "tile16":return tile16;
            case "tile17":return tile17;
            case "myTile9":
            case "tile19":return tile19;
            case "myTile10":
            case "tile20":return tile20;
            case "myTile3":
            case "tile10":return tile10;
            case "myTile11":
            case "tile21":return tile21;
            case "myTile12":
            case "tile22":return tile22;
            case "myTile13":
            case "tile23":return tile23;
            case "myTile14":
            case "tile24":return tile24;
            case "myTile15":
            case "tile25":return tile25;
            case "myTile16":
            case "tile26":return tile26;
            case "myTile19":
            case "tile29":return tile29;
            case "myTile17":
            case "tile27":return tile27;
            case "myTile18":
            case "tile28":return tile28;
            case "myTile20":
            case "tile30":return tile30;
            case "tile32":return tile32;
            case "myTile21":
            case "tile31":return tile31;
            case "myTile22":
            case "tile33":return tile33;
        }
        return null;
    })

}
// Código generado automáticamente. No editar.
